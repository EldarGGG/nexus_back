# Generated by Django 5.2.3 on 2025-06-23 07:11

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('companies', '0002_companysettings_auto_response_enabled_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyBridgeConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('platform', models.CharField(choices=[('whatsapp', 'WhatsApp Business'), ('telegram', 'Telegram'), ('instagram', 'Instagram'), ('facebook', 'Facebook Messenger'), ('signal', 'Signal')], max_length=20)),
                ('status', models.CharField(choices=[('configured', 'Configured'), ('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error'), ('pending', 'Pending Setup')], default='pending', max_length=20)),
                ('encrypted_config', models.TextField(blank=True, null=True)),
                ('whatsapp_phone_number_id', models.CharField(blank=True, max_length=100, null=True)),
                ('whatsapp_business_account_id', models.CharField(blank=True, max_length=100, null=True)),
                ('telegram_bot_username', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram_page_id', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook_page_id', models.CharField(blank=True, max_length=100, null=True)),
                ('webhook_url', models.URLField(blank=True, null=True)),
                ('auto_sync_enabled', models.BooleanField(default=True)),
                ('message_encryption', models.BooleanField(default=True)),
                ('matrix_room_alias_prefix', models.CharField(blank=True, max_length=50, null=True)),
                ('matrix_namespace', models.CharField(blank=True, max_length=100, null=True)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('setup_completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bridge_configurations', to='companies.company')),
            ],
            options={
                'db_table': 'company_bridge_configurations',
            },
        ),
        migrations.CreateModel(
            name='CompanyBridgeWebhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('message_received', 'Message Received'), ('message_delivered', 'Message Delivered'), ('message_read', 'Message Read'), ('user_joined', 'User Joined'), ('user_left', 'User Left'), ('status_update', 'Status Update'), ('error', 'Error')], max_length=30)),
                ('event_data', models.JSONField(default=dict)),
                ('processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bridge_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhook_events', to='companies.companybridgeconfiguration')),
            ],
            options={
                'db_table': 'company_bridge_webhooks',
            },
        ),
        migrations.AddIndex(
            model_name='companybridgeconfiguration',
            index=models.Index(fields=['company', 'platform'], name='company_bri_company_e0c5df_idx'),
        ),
        migrations.AddIndex(
            model_name='companybridgeconfiguration',
            index=models.Index(fields=['status'], name='company_bri_status_5abaa2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='companybridgeconfiguration',
            unique_together={('company', 'platform')},
        ),
        migrations.AddIndex(
            model_name='companybridgewebhook',
            index=models.Index(fields=['bridge_config', 'event_type'], name='company_bri_bridge__831047_idx'),
        ),
        migrations.AddIndex(
            model_name='companybridgewebhook',
            index=models.Index(fields=['processed', 'created_at'], name='company_bri_process_25257e_idx'),
        ),
    ]
